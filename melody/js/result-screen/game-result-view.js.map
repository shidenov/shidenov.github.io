{"version":3,"file":"game-result-view.js","sources":["../abstract-view.js","../data/game-data.js","game-result-view.js"],"sourcesContent":["const render = (html) => {\n  const template = document.createElement(`template`);\n  template.innerHTML = html;\n  if (template.content.children.length > 1) {\n    return template.content;\n  }\n  return template.content.firstElementChild;\n};\n\nexport default class AbstractView {\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(`Нельзя просто так взять и cоздать экземпляр класса :)`);\n    }\n  }\n\n  get template() {\n    throw new Error(`Переопредели геттер template!`);\n  }\n\n  get element() {\n    if (this._element) {\n      return this._element;\n    }\n\n    this._element = this.render();\n    this.bind(this._element);\n    return this._element;\n  }\n\n  render() {\n    return render(this.template);\n  }\n\n  bind() {\n    // nothing to do\n  }\n}\n\n","export const TIMER = 300; // 5 min\n\nexport const GAME = Object.freeze({\n  lives: 2,\n  currentTimer: TIMER,\n  score: 0,\n  currentLevel: 0,\n  nextLevel: 1\n});\n\nexport const QuestionType = {\n  GENRE: `genre`,\n  ARTIST: `artist`\n};\n\nexport const ResultGame = {\n  WIN: `win`,\n  NOLIVES: `noLives`,\n  TIMEOUT: `timeout`\n};\n\nconst Point = {\n  CORRECT_ANSWER: 1,\n  CORRECT_FAST_ANSWER: 2,\n  LIVE: 2\n};\n\nexport const calculateScore = (answers, lives) => {\n  const trueAnswers = answers.filter((item) => item.result !== false);\n  if (answers.length !== 10 || trueAnswers.length < 8) {\n    return -1;\n  }\n\n  const fastAnswers = trueAnswers.filter((item) => item.timer <= 30);\n  const pointAnswers = ((trueAnswers.length - fastAnswers.length) * Point.CORRECT_ANSWER) + (fastAnswers.length * Point.CORRECT_FAST_ANSWER);\n  const pointLives = (GAME.lives > lives) ? (GAME.lives - lives) * Point.LIVE : 0;\n\n  return pointAnswers - pointLives;\n};\n\nexport const calculateResult = (results, currentGame) => {\n  if (currentGame.timer.time <= 0) {\n    return `Время вышло! Вы не успели отгадать все мелодии`;\n  }\n\n  if (currentGame.lives < 0) {\n    return `У вас закончились все попытки. Ничего, повезёт в следующий раз!`;\n  }\n\n  // добавим результат игры в массив\n  results.push(currentGame.score);\n  const sortResults = results.sort((a, b) => b - a);\n  const place = sortResults.indexOf(currentGame.score) + 1; // место которое занял игрок\n  const totalGamers = sortResults.length;\n  const winPercent = ((totalGamers - place) / totalGamers * 100).toFixed(0);\n\n  return `Вы заняли ${place} место из ${sortResults.length}. Это лучше чем у ${winPercent}% игроков`;\n};\n\nexport const createTimer = (time) => {\n  if (typeof time === `undefined`) {\n    throw new Error(`Не указан аргумент`);\n  }\n\n  if (typeof time !== `number`) {\n    throw new Error(`Не верный тип данных, аргументом функции может быть только число`);\n  }\n\n  return {\n    time,\n    tick() {\n      if (this.time !== 0) {\n        this.time = this.time - 1;\n      }\n      this._timeout(this.time);\n    },\n\n    _timeout(currentTime) {\n      if (currentTime === 0) {\n        this.state = `timeout`;\n      }\n    }\n  };\n};\n\nexport const convertText = (number, word, one, many, multi) => {\n  const checkNumber = (num) => {\n    return (num > 21) ? +(num.toString()[1]) : num;\n  };\n\n  number = checkNumber(number);\n  if (number === 1) {\n    return word + one;\n  }\n\n  if (number > 1 && number < 5) {\n    return word + many;\n  }\n  return (number > 1 && number < 5) ? word + many : word + multi;\n};\n\nexport const showTimeResult = (time) => {\n  const {min, sec} = time;\n\n  const minutesText = convertText(+min, `минут`, `у`, `ы`, ``);\n  const secondsText = convertText(+sec, `секунд`, `у`, `ы`, ``);\n  const seconds = (sec[0] === `0`) ? sec[1] : sec;\n  return `${min} ${minutesText} и ${seconds} ${secondsText}`;\n};\n\nexport const timerConverToMinAndSec = (timer) => {\n  const minutes = Math.floor(timer / 60);\n  const seconds = ((timer % 60) / 1).toFixed(0);\n  const convertSeconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n  return {\n    min: minutes.toString(),\n    sec: convertSeconds\n  };\n};\n\nexport const getRadius = (relation, radius) => {\n  const stroke = +(2 * Math.PI * radius).toFixed();\n  const offset = +((1 - relation) * stroke).toFixed();\n  return {stroke, offset};\n};\n","import AbstractView from '../abstract-view';\nimport {ResultGame} from '../data/game-data';\n\nconst templates = {\n  [ResultGame.WIN]: (data) => `\n    <section class=\"main main--result\">\n      <section class=\"logo\" title=\"Угадай мелодию\"><h1>Угадай мелодию</h1></section>\n      <h2 class=\"title\">Вы настоящий меломан!</h2>\n      <div class=\"main-stat\">${data.time}\n        <br>вы&nbsp;набрали ${data.score} баллов (${data.totalFast} быстрых)\n        <br>совершив ${data.lives}</div>\n      <span class=\"main-comparison\">Подождите, загружаем результаты!</span>\n      <span role=\"button\" tabindex=\"0\" class=\"main-replay\">Сыграть ещё раз</span>\n    </section>`,\n\n  [ResultGame.NOLIVES]: () => `\n    <section class=\"main main--result\">\n      <section class=\"logo\" title=\"Угадай мелодию\"><h1>Угадай мелодию</h1></section>\n      <h2 class=\"title\">Какая жалость!</h2>\n      <div class=\"main-stat\">У вас закончились все попытки.<br>Ничего, повезёт в следующий раз!</div>\n      <span role=\"button\" tabindex=\"0\" class=\"main-replay\">Попробовать ещё раз</span>\n    </section>\n    `,\n\n  [ResultGame.TIMEOUT]: () => `\n    <section class=\"main main--result\">\n      <section class=\"logo\" title=\"Угадай мелодию\"><h1>Угадай мелодию</h1></section>\n      <h2 class=\"title\">Увы и ах!</h2>\n      <div class=\"main-stat\">Время вышло!<br>Вы не успели отгадать все мелодии</div>\n      <span role=\"button\" tabindex=\"0\" class=\"main-replay\">Попробовать ещё раз</span>\n    </section>\n  `\n};\n\nexport default class ResultView extends AbstractView {\n  constructor(game) {\n    super();\n    this.game = game;\n  }\n\n  get template() {\n    return templates[this.game.status](this.game);\n  }\n\n  onClick() { }\n\n  bind() {\n    const replayButtonElement = this.element.querySelector(`.main-replay`);\n    replayButtonElement.addEventListener(`click`, this.onClick);\n\n    this.scoresElement = this.element.querySelector(`.main-comparison`);\n  }\n}\n"],"names":[],"mappings":"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"}