{"version":3,"file":"game-model.js","sources":["../data/game-data.js","game-model.js"],"sourcesContent":["export const TIMER = 300; // 5 min\n\nexport const GAME = Object.freeze({\n  lives: 2,\n  currentTimer: TIMER,\n  score: 0,\n  currentLevel: 0,\n  nextLevel: 1\n});\n\nexport const QuestionType = {\n  GENRE: `genre`,\n  ARTIST: `artist`\n};\n\nexport const ResultGame = {\n  WIN: `win`,\n  NOLIVES: `noLives`,\n  TIMEOUT: `timeout`\n};\n\nconst Point = {\n  CORRECT_ANSWER: 1,\n  CORRECT_FAST_ANSWER: 2,\n  LIVE: 2\n};\n\nexport const calculateScore = (answers, lives) => {\n  const trueAnswers = answers.filter((item) => item.result !== false);\n  if (answers.length !== 10 || trueAnswers.length < 8) {\n    return -1;\n  }\n\n  const fastAnswers = trueAnswers.filter((item) => item.timer <= 30);\n  const pointAnswers = ((trueAnswers.length - fastAnswers.length) * Point.CORRECT_ANSWER) + (fastAnswers.length * Point.CORRECT_FAST_ANSWER);\n  const pointLives = (GAME.lives > lives) ? (GAME.lives - lives) * Point.LIVE : 0;\n\n  return pointAnswers - pointLives;\n};\n\nexport const calculateResult = (results, currentGame) => {\n  if (currentGame.timer.time <= 0) {\n    return `Время вышло! Вы не успели отгадать все мелодии`;\n  }\n\n  if (currentGame.lives < 0) {\n    return `У вас закончились все попытки. Ничего, повезёт в следующий раз!`;\n  }\n\n  // добавим результат игры в массив\n  results.push(currentGame.score);\n  const sortResults = results.sort((a, b) => b - a);\n  const place = sortResults.indexOf(currentGame.score) + 1; // место которое занял игрок\n  const totalGamers = sortResults.length;\n  const winPercent = ((totalGamers - place) / totalGamers * 100).toFixed(0);\n\n  return `Вы заняли ${place} место из ${sortResults.length}. Это лучше чем у ${winPercent}% игроков`;\n};\n\nexport const createTimer = (time) => {\n  if (typeof time === `undefined`) {\n    throw new Error(`Не указан аргумент`);\n  }\n\n  if (typeof time !== `number`) {\n    throw new Error(`Не верный тип данных, аргументом функции может быть только число`);\n  }\n\n  return {\n    time,\n    tick() {\n      if (this.time !== 0) {\n        this.time = this.time - 1;\n      }\n      this._timeout(this.time);\n    },\n\n    _timeout(currentTime) {\n      if (currentTime === 0) {\n        this.state = `timeout`;\n      }\n    }\n  };\n};\n\nexport const convertText = (number, word, one, many, multi) => {\n  const checkNumber = (num) => {\n    return (num > 21) ? +(num.toString()[1]) : num;\n  };\n\n  number = checkNumber(number);\n  if (number === 1) {\n    return word + one;\n  }\n\n  if (number > 1 && number < 5) {\n    return word + many;\n  }\n  return (number > 1 && number < 5) ? word + many : word + multi;\n};\n\nexport const showTimeResult = (time) => {\n  const {min, sec} = time;\n\n  const minutesText = convertText(+min, `минут`, `у`, `ы`, ``);\n  const secondsText = convertText(+sec, `секунд`, `у`, `ы`, ``);\n  const seconds = (sec[0] === `0`) ? sec[1] : sec;\n  return `${min} ${minutesText} и ${seconds} ${secondsText}`;\n};\n\nexport const timerConverToMinAndSec = (timer) => {\n  const minutes = Math.floor(timer / 60);\n  const seconds = ((timer % 60) / 1).toFixed(0);\n  const convertSeconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n  return {\n    min: minutes.toString(),\n    sec: convertSeconds\n  };\n};\n\nexport const getRadius = (relation, radius) => {\n  const stroke = +(2 * Math.PI * radius).toFixed();\n  const offset = +((1 - relation) * stroke).toFixed();\n  return {stroke, offset};\n};\n","import {GAME, createTimer} from '../data/game-data';\n\nexport default class GameModel {\n  constructor(data) {\n    this.data = data;\n    this.newGame();\n  }\n\n  get gameState() {\n    return this._gameState;\n  }\n\n  set gameState(gameState) {\n    this._gameState = Object.assign({}, gameState);\n  }\n\n  newGame() {\n    this._gameState = Object.assign({}, GAME);\n    this._gameState.answers = [];\n    this._gameState.timer = createTimer(this._gameState.currentTimer); // 300\n  }\n\n  resultGame(status) {\n    this._gameState.resultGame = status;\n  }\n\n  lossLive() {\n    this._gameState.lives = this._gameState.lives - 1;\n  }\n\n  nextLevel() {\n    this._gameState.nextLevel = this._gameState.nextLevel + 1;\n  }\n\n  changeCurrentLevel() {\n    this._gameState.currentLevel = this._gameState.nextLevel; // назначаем новый текущий уровнь\n  }\n\n  addResultAnswer(result) {\n    const currentAnswerTime = this._gameState.currentTimer - this._gameState.timer.time;\n    this._gameState.answers.push({result, timer: currentAnswerTime}); // запишим ответ в массив ответов\n    this._gameState.currentTimer = this._gameState.timer.time;\n  }\n\n  getLevelGameData() {\n    const gameData = this.data[this._gameState.currentLevel];\n    return gameData !== undefined ? gameData : false;\n  }\n\n  checkLives() {\n    return this._gameState.lives < 0;\n  }\n\n  checkTimerStatus() {\n    return this._gameState.timer.state === `timeout`;\n  }\n\n  tick() {\n    this._gameState.timer.tick();\n  }\n}\n"],"names":[],"mappings":"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"}