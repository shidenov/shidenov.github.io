{"version":3,"names":[],"mappings":"","sources":["game-artist-view.js"],"sourcesContent":["import AbstractView from './abstract-view';\nimport {development} from './main';\nimport {getAudioTrack} from './data/music-data';\n\nexport default class ArtistView extends AbstractView {\n  constructor(game) {\n    super();\n    this.game = game;\n  }\n\n  get template() {\n    const answers = [];\n    for (let i = 0; this.game.answers.length > i; i++) {\n      const status = (development) ? `<span style=\"color: black\">${this.game.answers[i].result()}</span>` : ``;\n      const item = `\n        <div class=\"main-answer-wrapper\">\n          <input class=\"main-answer-r\" type=\"radio\" id=\"answer-${i}\" name=\"answer\" value=\"val-${i}\"/>\n          <label class=\"main-answer\" for=\"answer-${i}\">\n            <img class=\"main-answer-preview\" src=\"${this.game.answers[i].image}\" alt=\"${this.game.answers[i].artist}\" width=\"134\" height=\"134\">\n            ${this.game.answers[i].artist}\n            ${status}\n          </label>\n        </div>\n      `;\n\n      item.trim();\n      answers.push(item);\n    }\n\n    return `\n    <section class=\"main main--level main--level-${this.game.gameType}\">\n      <div class=\"main-wrap\">\n        <h2 class=\"title main-title\">${this.game.title}</h2>\n        <div class=\"player-wrapper\">\n          <div class=\"player\">\n            <button class=\"player-control player-control--pause\"></button>\n            <div class=\"player-track\">\n              <span class=\"player-status\"></span>\n            </div>\n            </div>\n          </div>\n        <form class=\"main-list\">\n        ${answers.join(``)}\n        </form>\n      </div>\n    </section>\n  `;\n  }\n\n  onResult() { }\n\n  bind() {\n    let track;\n    for (let answer of this.game.answers) {\n      if (answer.result()) {\n        track = getAudioTrack(answer.src);\n        track.play();\n      }\n    }\n\n    const buttonControl = this.element.querySelector(`.player-control`);\n    buttonControl.addEventListener(`click`, (event) => {\n      const e = event || window.event;\n      const target = e.target || e.srcElement;\n\n      if ([...target.classList].indexOf(`player-control--pause`) !== -1) {\n        target.classList.remove(`player-control--pause`);\n        target.classList.add(`player-control--play`);\n        track.pause();\n      } else {\n        target.classList.remove(`player-control--play`);\n        target.classList.add(`player-control--pause`);\n        track.play();\n      }\n    });\n\n    const inputItems = this.element.querySelectorAll(`input`);\n    for (let input of inputItems) {\n      input.addEventListener(`click`, (event) => {\n        const e = event || window.event;\n        const target = e.target || e.srcElement;\n\n        const currentAnswerIndex = target.value.slice(target.value.length - 1, target.value.length);\n        const result = this.game.answers[currentAnswerIndex].result();\n\n        // stop audio\n        track.pause();\n        this.onResult(result);\n      });\n    }\n  }\n}\n"],"file":"game-artist-view.js"}