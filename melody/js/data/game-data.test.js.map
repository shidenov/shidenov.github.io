{"version":3,"file":"game-data.test.js","sources":["game-data.js","game-data.test.js"],"sourcesContent":["export const TIMER = 300; // 5 min\n\nexport const GAME = Object.freeze({\n  lives: 2,\n  currentTimer: TIMER,\n  score: 0,\n  currentLevel: 0,\n  nextLevel: 1\n});\n\nexport const QuestionType = {\n  GENRE: `genre`,\n  ARTIST: `artist`\n};\n\nexport const ResultGame = {\n  WIN: `win`,\n  NOLIVES: `noLives`,\n  TIMEOUT: `timeout`\n};\n\nconst Point = {\n  CORRECT_ANSWER: 1,\n  CORRECT_FAST_ANSWER: 2,\n  LIVE: 2\n};\n\nexport const calculateScore = (answers, lives) => {\n  const trueAnswers = answers.filter((item) => item.result !== false);\n  if (answers.length !== 10 || trueAnswers.length < 8) {\n    return -1;\n  }\n\n  const fastAnswers = trueAnswers.filter((item) => item.timer <= 30);\n  const pointAnswers = ((trueAnswers.length - fastAnswers.length) * Point.CORRECT_ANSWER) + (fastAnswers.length * Point.CORRECT_FAST_ANSWER);\n  const pointLives = (GAME.lives > lives) ? (GAME.lives - lives) * Point.LIVE : 0;\n\n  return pointAnswers - pointLives;\n};\n\nexport const calculateResult = (results, currentGame) => {\n  if (currentGame.timer.time <= 0) {\n    return `Время вышло! Вы не успели отгадать все мелодии`;\n  }\n\n  if (currentGame.lives < 0) {\n    return `У вас закончились все попытки. Ничего, повезёт в следующий раз!`;\n  }\n\n  // добавим результат игры в массив\n  results.push(currentGame.score);\n  const sortResults = results.sort((a, b) => b - a);\n  const place = sortResults.indexOf(currentGame.score) + 1; // место которое занял игрок\n  const totalGamers = sortResults.length;\n  const winPercent = ((totalGamers - place) / totalGamers * 100).toFixed(0);\n\n  return `Вы заняли ${place} место из ${sortResults.length}. Это лучше чем у ${winPercent}% игроков`;\n};\n\nexport const createTimer = (time) => {\n  if (typeof time === `undefined`) {\n    throw new Error(`Не указан аргумент`);\n  }\n\n  if (typeof time !== `number`) {\n    throw new Error(`Не верный тип данных, аргументом функции может быть только число`);\n  }\n\n  return {\n    time,\n    tick() {\n      if (this.time !== 0) {\n        this.time = this.time - 1;\n      }\n      this._timeout(this.time);\n    },\n\n    _timeout(currentTime) {\n      if (currentTime === 0) {\n        this.state = `timeout`;\n      }\n    }\n  };\n};\n\nexport const convertText = (number, word, one, many, multi) => {\n  const checkNumber = (num) => {\n    return (num > 21) ? +(num.toString()[1]) : num;\n  };\n\n  number = checkNumber(number);\n  if (number === 1) {\n    return word + one;\n  }\n\n  if (number > 1 && number < 5) {\n    return word + many;\n  }\n  return (number > 1 && number < 5) ? word + many : word + multi;\n};\n\nexport const showTimeResult = (time) => {\n  const {min, sec} = time;\n\n  const minutesText = convertText(+min, `минут`, `у`, `ы`, ``);\n  const secondsText = convertText(+sec, `секунд`, `у`, `ы`, ``);\n  const seconds = (sec[0] === `0`) ? sec[1] : sec;\n  return `${min} ${minutesText} и ${seconds} ${secondsText}`;\n};\n\nexport const timerConverToMinAndSec = (timer) => {\n  const minutes = Math.floor(timer / 60);\n  const seconds = ((timer % 60) / 1).toFixed(0);\n  const convertSeconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n  return {\n    min: minutes.toString(),\n    sec: convertSeconds\n  };\n};\n\nexport const getRadius = (relation, radius) => {\n  const stroke = +(2 * Math.PI * radius).toFixed();\n  const offset = +((1 - relation) * stroke).toFixed();\n  return {stroke, offset};\n};\n","import {\n  calculateScore,\n  calculateResult,\n  createTimer,\n  timerConverToMinAndSec,\n  showTimeResult,\n  convertText,\n  getRadius\n} from './game-data';\n\nimport {assert} from 'chai';\n\ndescribe(`Функция подсчёта набранных баллов игрока`, () => {\n  it(`Проверка на количество ответов меньше десяти`, () => {\n    assert.equal(calculateScore([\n      {result: false, timer: 60},\n      {result: false, timer: 60},\n      {result: false, timer: 60}\n    ], -1), -1);\n\n    assert.equal(calculateScore([\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: false, timer: 60},\n      {result: false, timer: 60},\n      {result: false, timer: 60}\n    ], -1), -1);\n\n    assert.equal(calculateScore([\n      {result: true, timer: 30},\n      {result: false, timer: 31},\n      {result: true, timer: 30},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: false, timer: 28},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: false, timer: 20}\n    ], -1), -1);\n  });\n\n  it(`Проверка результатов - ответы даны за время больше 30 секунд`, () => {\n    assert.equal(calculateScore([\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60}\n    ], 2), 10);\n\n    assert.equal(calculateScore([\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: false, timer: 60},\n      {result: true, timer: 60},\n      {esult: true, timer: 60},\n      {result: true, timer: 60}\n    ], 1), 7);\n\n    assert.equal(calculateScore([\n      {result: false, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: false, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60}\n    ], 0), 4);\n  });\n\n  it(`Проверка результатов - разные варианты ответов`, () => {\n    assert.equal(calculateScore([\n      {result: true, timer: 30},\n      {result: true, timer: 31},\n      {result: true, timer: 30},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 28},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 60},\n      {result: true, timer: 20}\n    ], 2), 14);\n\n    assert.equal(calculateScore([\n      {result: true, timer: 24},\n      {result: true, timer: 60},\n      {result: true, timer: 30},\n      {result: true, timer: 62},\n      {result: false, timer: 58},\n      {result: true, timer: 30},\n      {result: true, timer: 64},\n      {result: true, timer: 40},\n      {result: true, timer: 60},\n      {result: true, timer: 15}\n    ], 1), 11);\n\n    assert.equal(calculateScore([\n      {result: true, timer: 27},\n      {result: true, timer: 65},\n      {result: true, timer: 30},\n      {result: true, timer: 60},\n      {result: false, timer: 60},\n      {result: true, timer: 30},\n      {result: true, timer: 40},\n      {result: true, timer: 70},\n      {result: true, timer: 55},\n      {result: false, timer: 10}\n    ], 0), 7);\n  });\n});\n\ndescribe(`Функция подсчёта результатов игры`, () => {\n  const timeout = `Время вышло! Вы не успели отгадать все мелодии`;\n  const attemptsEnd = `У вас закончились все попытки. Ничего, повезёт в следующий раз!`;\n\n  it(`Подсчёт результатов: Проигрышь - закончилось время`, () => {\n    assert.equal(calculateResult([4, 5, 8, 11], {score: 10, lives: 2, timer: {time: 0}}), timeout);\n    assert.equal(calculateResult([4, 12, 8, 11, 5], {score: 5, lives: 0, timer: {time: 0}}), timeout);\n    assert.equal(calculateResult([10, 5], {score: 8, lives: 1, timer: {time: 0}}), timeout);\n  });\n\n  it(`Подсчёт результатов: Проигрышь - закончились все попытки`, () => {\n    assert.equal(calculateResult([4, 5, 8, 11], {score: 10, lives: -1, timer: {time: 60}}), attemptsEnd);\n    assert.equal(calculateResult([4, 12, 8, 11, 5], {score: 5, lives: -1, timer: {time: 100}}), attemptsEnd);\n    assert.equal(calculateResult([10, 5], {score: 8, lives: -1, timer: 120}), attemptsEnd);\n  });\n\n  it(`Подсчёт результатов: Проигрышь - закончились все попытки и время`, () => {\n    assert.equal(calculateResult([4, 12, 5], {score: 10, lives: -1, timer: {time: 0}}), timeout);\n    assert.equal(calculateResult([4, 2, 8, 11], {score: 8, lives: -1, timer: {time: 0}}), timeout);\n  });\n\n  it(`Подсчёт результатов: Выигрыш`, () => {\n    assert.equal(calculateResult([4, 5, 8, 11], {score: 10, lives: 2, timer: {time: 60}}\n    ), `Вы заняли 2 место из 5. Это лучше чем у 60% игроков`);\n    assert.equal(calculateResult([4, 12, 8, 11, 5], {score: 5, lives: 0, timer: {time: 360}}\n    ), `Вы заняли 4 место из 6. Это лучше чем у 33% игроков`);\n    assert.equal(calculateResult([10, 5], {score: 8, lives: 1, timer: {time: 120}}\n    ), `Вы заняли 2 место из 3. Это лучше чем у 33% игроков`);\n  });\n});\n\ndescribe(`Таймер`, () => {\n  it(`Таймер: создание`, () => {\n    assert.isObject(createTimer(300));\n    assert.throws(() => createTimer(`300`), Error, `Не верный тип данных, аргументом функции может быть только число`);\n    assert.throws(() => createTimer({}), Error, `Не верный тип данных, аргументом функции может быть только число`);\n    assert.throws(() => createTimer([]), Error, `Не верный тип данных, аргументом функции может быть только число`);\n    assert.throws(() => createTimer(), Error, `Не указан аргумент`);\n  });\n\n  it(`Таймер: проверка на значения`, () => {\n    const timer = createTimer(100);\n    assert.equal(timer.time, 100);\n  });\n\n  it(`Таймер: метод tick`, () => {\n    const timer = createTimer(3);\n    timer.tick();\n    assert.equal(timer.time, 2);\n    timer.tick();\n    assert.equal(timer.time, 1);\n    timer.tick();\n    assert.equal(timer.time, 0);\n    assert.equal(timer.state, `timeout`);\n  });\n\n  it(`Таймер: проверка tick при timeout`, () => {\n    const timer = createTimer(2);\n    timer.tick();\n    timer.tick();\n    timer.tick();\n    timer.tick();\n\n    assert.equal(timer.time, 0);\n    assert.equal(timer.state, `timeout`);\n  });\n});\n\ndescribe(`Жизни, попытки`, () => {\n  it(`Жизни, попытки: Проверка формы существительного ошибки`, () => {\n    assert.equal(convertText(0, `ошиб`, `ку`, `ки`, `ок`), `ошибок`);\n    assert.equal(convertText(1, `ошиб`, `ку`, `ки`, `ок`), `ошибку`);\n    assert.equal(convertText(2, `ошиб`, `ку`, `ки`, `ок`), `ошибки`);\n    assert.equal(convertText(3, `ошиб`, `ку`, `ки`, `ок`), `ошибки`);\n    assert.equal(convertText(4, `ошиб`, `ку`, `ки`, `ок`), `ошибки`);\n    assert.equal(convertText(5, `ошиб`, `ку`, `ки`, `ок`), `ошибок`);\n    assert.equal(convertText(6, `ошиб`, `ку`, `ки`, `ок`), `ошибок`);\n  });\n});\n\ndescribe(`Таймер - конвертация`, () => {\n  it(`Таймер: Проверка функции конвертации`, () => {\n    assert.deepEqual(timerConverToMinAndSec(300), {min: `5`, sec: `00`});\n    assert.deepEqual(timerConverToMinAndSec(22), {min: `0`, sec: `22`});\n    assert.deepEqual(timerConverToMinAndSec(150), {min: `2`, sec: `30`});\n    assert.deepEqual(timerConverToMinAndSec(48), {min: `0`, sec: `48`});\n    assert.deepEqual(timerConverToMinAndSec(188), {min: `3`, sec: `08`});\n  });\n\n  it(`Таймер: Проверка формы склонения минут и секунд`, () => {\n    const time1 = timerConverToMinAndSec(300);\n    assert.equal(showTimeResult(time1), `5 минут и 0 секунд`);\n\n    const time2 = timerConverToMinAndSec(22);\n    assert.equal(showTimeResult(time2), `0 минут и 22 секунды`);\n\n    const time3 = timerConverToMinAndSec(150);\n    assert.equal(showTimeResult(time3), `2 минуты и 30 секунд`);\n\n    const time4 = timerConverToMinAndSec(48);\n    assert.equal(showTimeResult(time4), `0 минут и 48 секунд`);\n\n    const time5 = timerConverToMinAndSec(188);\n    assert.equal(showTimeResult(time5), `3 минуты и 8 секунд`);\n\n    const time6 = timerConverToMinAndSec(61);\n    assert.equal(showTimeResult(time6), `1 минуту и 1 секунду`);\n\n    const time7 = timerConverToMinAndSec(71);\n    assert.equal(showTimeResult(time7), `1 минуту и 11 секунд`);\n\n    const time8 = timerConverToMinAndSec(151);\n    assert.equal(showTimeResult(time8), `2 минуты и 31 секунду`);\n  });\n});\n\ndescribe(`Function should correctly calculate circle length`, () => {\n  describe(`Normal cases`, () => {\n    it(`Should return full length and 0 in initial state`, () => {\n      // 2 * 3.14 * 100 = 6.28 * 100 = 628\n      assert.equal(getRadius(1, 100).stroke, 628);\n      assert.equal(getRadius(1, 100).offset, 0);\n    });\n\n    it(`Should return 0 and full length in the final state`, () => {\n      // 2 * 3.14 * 100 = 6.28 * 100 = 628\n      assert.equal(getRadius(0, 100).stroke, 628);\n      assert.equal(getRadius(0, 100).offset, 628);\n    });\n\n    it(`Offset and length should be equal on a half`, () => {\n      // 2 * 3.14 * 100 / 2 = 3.14 * 100 = 314\n      assert.equal(getRadius(0.5, 100).stroke, 628);\n      assert.equal(getRadius(0.5, 100).offset, 314);\n    });\n  });\n});\n"],"names":["assert"],"mappings":";;;AAAO,MAAM,KAAK,GAAG,GAAG,CAAC;;AAEzB,AAAO,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;EAChC,KAAK,EAAE,CAAC;EACR,YAAY,EAAE,KAAK;EACnB,KAAK,EAAE,CAAC;EACR,YAAY,EAAE,CAAC;EACf,SAAS,EAAE,CAAC;CACb,CAAC,CAAC;AACH,AAWA;AACA,MAAM,KAAK,GAAG;EACZ,cAAc,EAAE,CAAC;EACjB,mBAAmB,EAAE,CAAC;EACtB,IAAI,EAAE,CAAC;CACR,CAAC;;AAEF,AAAO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,KAAK,KAAK;EAChD,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC;EACpE,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;IACnD,OAAO,CAAC,CAAC,CAAC;GACX;;EAED,MAAM,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;EACnE,MAAM,YAAY,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,IAAI,KAAK,CAAC,cAAc,KAAK,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC;EAC3I,MAAM,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;;EAEhF,OAAO,YAAY,GAAG,UAAU,CAAC;CAClC,CAAC;;AAEF,AAAO,MAAM,eAAe,GAAG,CAAC,OAAO,EAAE,WAAW,KAAK;EACvD,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE;IAC/B,OAAO,CAAC,8CAA8C,CAAC,CAAC;GACzD;;EAED,IAAI,WAAW,CAAC,KAAK,GAAG,CAAC,EAAE;IACzB,OAAO,CAAC,+DAA+D,CAAC,CAAC;GAC1E;;;EAGD,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;EAChC,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAClD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACzD,MAAM,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;EACvC,MAAM,UAAU,GAAG,CAAC,CAAC,WAAW,GAAG,KAAK,IAAI,WAAW,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE1E,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,WAAW,CAAC,MAAM,CAAC,kBAAkB,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;CACpG,CAAC;;AAEF,AAAO,MAAM,WAAW,GAAG,CAAC,IAAI,KAAK;EACnC,IAAI,OAAO,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;IAC/B,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;GACvC;;EAED,IAAI,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IAC5B,MAAM,IAAI,KAAK,CAAC,CAAC,gEAAgE,CAAC,CAAC,CAAC;GACrF;;EAED,OAAO;IACL,IAAI;IACJ,IAAI,GAAG;MACL,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;OAC3B;MACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;;IAED,QAAQ,CAAC,WAAW,EAAE;MACpB,IAAI,WAAW,KAAK,CAAC,EAAE;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC;OACxB;KACF;GACF,CAAC;CACH,CAAC;;AAEF,AAAO,MAAM,WAAW,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,KAAK;EAC7D,MAAM,WAAW,GAAG,CAAC,GAAG,KAAK;IAC3B,OAAO,CAAC,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;GAChD,CAAC;;EAEF,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;EAC7B,IAAI,MAAM,KAAK,CAAC,EAAE;IAChB,OAAO,IAAI,GAAG,GAAG,CAAC;GACnB;;EAED,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;IAC5B,OAAO,IAAI,GAAG,IAAI,CAAC;GACpB;EACD,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;CAChE,CAAC;;AAEF,AAAO,MAAM,cAAc,GAAG,CAAC,IAAI,KAAK;EACtC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC;;EAExB,MAAM,WAAW,GAAG,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,WAAW,GAAG,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAChD,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;CAC5D,CAAC;;AAEF,AAAO,MAAM,sBAAsB,GAAG,CAAC,KAAK,KAAK;EAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;EACvC,MAAM,OAAO,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,cAAc,GAAG,CAAC,OAAO,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC;;EAEhE,OAAO;IACL,GAAG,EAAE,OAAO,CAAC,QAAQ,EAAE;IACvB,GAAG,EAAE,cAAc;GACpB,CAAC;CACH,CAAC;;AAEF,AAAO,MAAM,SAAS,GAAG,CAAC,QAAQ,EAAE,MAAM,KAAK;EAC7C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,OAAO,EAAE,CAAC;EACjD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,IAAI,MAAM,EAAE,OAAO,EAAE,CAAC;EACpD,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACzB,CAAC;;ACjHF,QAAQ,CAAC,CAAC,wCAAwC,CAAC,EAAE,MAAM;EACzD,EAAE,CAAC,CAAC,4CAA4C,CAAC,EAAE,MAAM;IACvDA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;KAC3B,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEZA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;KAC3B,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEZA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;KAC3B,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;GACb,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,4DAA4D,CAAC,EAAE,MAAM;IACvEA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;KAC1B,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;IAEXA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACxB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;KAC1B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEVA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;KAC1B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GACX,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,8CAA8C,CAAC,EAAE,MAAM;IACzDA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;KAC1B,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;IAEXA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;KAC1B,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;IAEXA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;MAC1B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;MACzB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;KAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GACX,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,QAAQ,CAAC,CAAC,iCAAiC,CAAC,EAAE,MAAM;EAClD,MAAM,OAAO,GAAG,CAAC,8CAA8C,CAAC,CAAC;EACjE,MAAM,WAAW,GAAG,CAAC,+DAA+D,CAAC,CAAC;;EAEtF,EAAE,CAAC,CAAC,kDAAkD,CAAC,EAAE,MAAM;IAC7DA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IAC/FA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IAClGA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;GACzF,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,wDAAwD,CAAC,EAAE,MAAM;IACnEA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;IACrGA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;IACzGA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;GACxF,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,gEAAgE,CAAC,EAAE,MAAM;IAC3EA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IAC7FA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;GAChG,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,4BAA4B,CAAC,EAAE,MAAM;IACvCA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KACnF,EAAE,CAAC,mDAAmD,CAAC,CAAC,CAAC;IAC1DA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACvF,EAAE,CAAC,mDAAmD,CAAC,CAAC,CAAC;IAC1DA,WAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAC7E,EAAE,CAAC,mDAAmD,CAAC,CAAC,CAAC;GAC3D,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM;EACvB,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAAE,MAAM;IAC3BA,WAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IAClCA,WAAM,CAAC,MAAM,CAAC,MAAM,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,gEAAgE,CAAC,CAAC,CAAC;IACnHA,WAAM,CAAC,MAAM,CAAC,MAAM,WAAW,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,gEAAgE,CAAC,CAAC,CAAC;IAChHA,WAAM,CAAC,MAAM,CAAC,MAAM,WAAW,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,gEAAgE,CAAC,CAAC,CAAC;IAChHA,WAAM,CAAC,MAAM,CAAC,MAAM,WAAW,EAAE,EAAE,KAAK,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC;GACjE,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,4BAA4B,CAAC,EAAE,MAAM;IACvC,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAC/BA,WAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;GAC/B,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,kBAAkB,CAAC,EAAE,MAAM;IAC7B,MAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7B,KAAK,CAAC,IAAI,EAAE,CAAC;IACbA,WAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5B,KAAK,CAAC,IAAI,EAAE,CAAC;IACbA,WAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5B,KAAK,CAAC,IAAI,EAAE,CAAC;IACbA,WAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5BA,WAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;GACtC,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,iCAAiC,CAAC,EAAE,MAAM;IAC5C,MAAM,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7B,KAAK,CAAC,IAAI,EAAE,CAAC;IACb,KAAK,CAAC,IAAI,EAAE,CAAC;IACb,KAAK,CAAC,IAAI,EAAE,CAAC;IACb,KAAK,CAAC,IAAI,EAAE,CAAC;;IAEbA,WAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5BA,WAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;GACtC,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,MAAM;EAC/B,EAAE,CAAC,CAAC,sDAAsD,CAAC,EAAE,MAAM;IACjEA,WAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACjEA,WAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACjEA,WAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACjEA,WAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACjEA,WAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACjEA,WAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACjEA,WAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;GAClE,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,QAAQ,CAAC,CAAC,oBAAoB,CAAC,EAAE,MAAM;EACrC,EAAE,CAAC,CAAC,oCAAoC,CAAC,EAAE,MAAM;IAC/CA,WAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrEA,WAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpEA,WAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrEA,WAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpEA,WAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;GACtE,CAAC,CAAC;;EAEH,EAAE,CAAC,CAAC,+CAA+C,CAAC,EAAE,MAAM;IAC1D,MAAM,KAAK,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC;IAC1CA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC;;IAE1D,MAAM,KAAK,GAAG,sBAAsB,CAAC,EAAE,CAAC,CAAC;IACzCA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC;;IAE5D,MAAM,KAAK,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC;IAC1CA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC;;IAE5D,MAAM,KAAK,GAAG,sBAAsB,CAAC,EAAE,CAAC,CAAC;IACzCA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;;IAE3D,MAAM,KAAK,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC;IAC1CA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;;IAE3D,MAAM,KAAK,GAAG,sBAAsB,CAAC,EAAE,CAAC,CAAC;IACzCA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC;;IAE5D,MAAM,KAAK,GAAG,sBAAsB,CAAC,EAAE,CAAC,CAAC;IACzCA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC;;IAE5D,MAAM,KAAK,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC;IAC1CA,WAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC,CAAC;GAC9D,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,QAAQ,CAAC,CAAC,iDAAiD,CAAC,EAAE,MAAM;EAClE,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,MAAM;IAC7B,EAAE,CAAC,CAAC,gDAAgD,CAAC,EAAE,MAAM;;MAE3DA,WAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;MAC5CA,WAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KAC3C,CAAC,CAAC;;IAEH,EAAE,CAAC,CAAC,kDAAkD,CAAC,EAAE,MAAM;;MAE7DA,WAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;MAC5CA,WAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC7C,CAAC,CAAC;;IAEH,EAAE,CAAC,CAAC,2CAA2C,CAAC,EAAE,MAAM;;MAEtDA,WAAM,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;MAC9CA,WAAM,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC/C,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC;;;;"}